import logging

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, \
    ReplyKeyboardRemove
from config import currency, manager_link, reviews_link
from database.db import Database

db = Database('database/database.db')

# –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
mainMenu = InlineKeyboardMarkup()
btnCatalog = InlineKeyboardButton(f'–ö–∞—Ç–∞–ª–æ–≥', callback_data='menu_catalog')
btnDelivery = InlineKeyboardButton(f'–î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ–ø–ª–∞—Ç–∞', callback_data='menu_delivery')
btnReviews = InlineKeyboardButton(f'–û—Ç–∑—ã–≤—ã', callback_data='menu_reviews')
btnManager = InlineKeyboardButton(f'–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É', url=manager_link)
btnOrder = InlineKeyboardButton(f'–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', callback_data='menu_order')

mainMenu.add(btnCatalog).add(btnDelivery).add(btnReviews).add(btnManager).add(btnOrder)

# –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –ø—Ä–æ—à–ª–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
btnBackMenu = InlineKeyboardButton(f'–ù–∞–∑–∞–¥', callback_data=f'menu_start')
btnBackCatalog = InlineKeyboardButton(f'–ù–∞–∑–∞–¥', callback_data=f'menu_catalog')
btnBackFullCatalog = InlineKeyboardButton(f'–ù–∞–∑–∞–¥', callback_data=f'catalog_start')

btnMenu = InlineKeyboardButton(f'–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é', callback_data=f'menu_start')

# –ö–∞—Ç–∞–ª–æ–≥
mainCatalog = InlineKeyboardMarkup()
btnFullCatalog = InlineKeyboardButton(f'–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ç–æ–≤–∞—Ä–∞—Ö (–æ–±–∑–æ—Ä—ã)', callback_data=f'catalog_start')
mainCatalog.add(btnFullCatalog).add(btnManager).add(btnBackMenu)

# –î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ–ø–ª–∞—Ç–∞
mainDelivery = InlineKeyboardMarkup()
mainDelivery.add(btnManager).add(btnBackMenu)

# –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
mainOrder = InlineKeyboardMarkup()
mainOrder.add(btnManager).add(btnCatalog).add(btnBackMenu)

# –º–µ–Ω—é –∞–¥–º–∏–Ω–∞
btnAdd = KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å')
btnEdit = KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å')
btnUsers = KeyboardButton('–ö–æ–ª-–≤–æ —é–∑–µ—Ä–æ–≤')
btnSpam = KeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞')
btnMainMenu = KeyboardButton('–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é')
adminMenu = ReplyKeyboardMarkup(resize_keyboard=True)
adminMenu.add(btnAdd, btnEdit).add(btnUsers, btnSpam).add(btnMainMenu)

# —É–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫–∏
delKeyboard = ReplyKeyboardRemove()

# –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π
btnDeny = KeyboardButton('üö´')

mainDeny = ReplyKeyboardMarkup(resize_keyboard=True)
mainDeny.add(btnDeny)

btnApply = KeyboardButton('‚úÖ')
mainChoice = ReplyKeyboardMarkup(resize_keyboard=True)
mainChoice.add(btnDeny, btnApply)

# —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
btnProductCategory = KeyboardButton('–ö–∞—Ç–µ–≥–æ—Ä–∏—è')
btnProductName = KeyboardButton('–ù–∞–∑–≤–∞–Ω–∏–µ')
btnProductDescription = KeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ')
btnProductPrice = KeyboardButton('–¶–µ–Ω–∞')
btnProductMedia = KeyboardButton('–§–æ—Ç–æ')
btnProductDel = KeyboardButton('–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä')
adminEdit = ReplyKeyboardMarkup(resize_keyboard=True)
adminEdit.add(btnProductDel).add(btnProductCategory, btnProductName).add(btnProductDescription, btnProductPrice).add(
    btnProductMedia)


# —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–∞—Ç–µ–≥–æ—Ä–∏–π
def catalog_list():
    catalogList = InlineKeyboardMarkup(row_width=2)
    for i, name in enumerate(db.get_products_category()):
        if not len(name.encode('utf-8')) > 57:
            catalogList.add(InlineKeyboardButton(f'{name}',
                                                 callback_data=f'catalog_{name}'))
    catalogList.add(btnMenu, btnBackCatalog)
    return catalogList


# —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤
def category_list(prod_category):
    product_names = db.get_products_name(prod_category)
    categorylist = InlineKeyboardMarkup(row_width=2)
    for name in product_names:
        if not len(name.encode('utf-8')) > 59:
            categorylist.add(
                InlineKeyboardButton(f'{name} - {str("{:.2f}".format(db.get_product_price(name)))} {currency}',
                                     callback_data=f'prod_{name}'))
        else:
            logging.info(f'–£ —Ç–æ–≤–∞—Ä–∞ {name} —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ')
    return categorylist.add(btnMenu, btnBackFullCatalog)


# –º–µ–Ω—é –∫–∞—Ç–∞–ª–æ–≥–∞
def reviews_list(media_counter):
    mainReviews = InlineKeyboardMarkup()
    btnReviewsLink = InlineKeyboardButton(f'–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ç–æ–≤–∞—Ä–∞—Ö (–æ–±–∑–æ—Ä—ã)', url=reviews_link)
    btnMediaBackMenu = InlineKeyboardButton(f'–ù–∞–∑–∞–¥', callback_data=f'menu{media_counter}_start')
    return mainReviews.add(btnReviewsLink).add(btnMediaBackMenu)


# –∫–∞—Ä—Ç–æ—á–∫–∞
def prod_card(prod_name, media_counter):
    prodCard = InlineKeyboardMarkup(row_width=2)
    btnBackCategoryDel = InlineKeyboardButton('–ù–∞–∑–∞–¥',
                                              callback_data=f'catalog{media_counter}_{db.get_product_category(prod_name)}')
    btnMenuDel = InlineKeyboardButton(f'–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é', callback_data=f'menu{media_counter}_start')
    return prodCard.add(btnManager).add(btnMenuDel, btnBackCategoryDel)


# –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def check_prod_card(product_name):
    checkAdminCart = InlineKeyboardMarkup(row_width=1)
    btnCheck = InlineKeyboardButton(f'–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É',
                                    callback_data=f'prod_{product_name}')
    return checkAdminCart.add(btnCheck)


# —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def admin_category_list(is_edit=True):
    categoryAdminList = ReplyKeyboardMarkup(resize_keyboard=True)
    if is_edit:
        categoryAdminList.add('–§–æ—Ç–æ –æ—Ç–∑—ã–≤–æ–≤')
    for i, name in enumerate(db.get_products_category()):
        categoryAdminList.add(KeyboardButton(name))
    return categoryAdminList


# —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def admin_product_list(product_category):
    product_names = db.get_products_name(product_category, all_items=True)
    productAdminList = ReplyKeyboardMarkup(resize_keyboard=True)
    for name in product_names:
        productAdminList.add(InlineKeyboardButton(name))
    return productAdminList
